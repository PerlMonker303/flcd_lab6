1. Language Definition:
  1.1. Alphabet:
    a. Upper (A-Z) and lower case letters (a-z) of the English alphabet
    b. Decimal digits (0-9);
  1.2. Lexic:
    a. Special symbols:
	- operators + - * / < <= === !== >= > || &&
	- separators ; , : space ( ) [ ]
	- reserved words:
		START FINISH DEF NUMBER STRING CHAR ARRAY OF UNDEFINED READ IF STARTIF FINISHIF ASSIGN 
		WHILE STARTWHILE FINISHWHILE PROC STARTPROC FINISHPROC CALL RETURN ELSE FINISHELSE
    b. Identifiers  (a sequence of letters and  digits, such that the first character is a letter); the rule is:
		identifier ::= letter | letter {letter | digit}
		letter ::= "A" | "B" | . ..| "Z"
		digit ::= "0" | "1" |...| "9"
		non_zero_digit ::= “1” | ... | “9”
    c. Constants:
	1. Number (Integer):
	    constno ::= [(“+” | “-“)] non_zero_number | zero
	    zero ::= 0
	    non_zero_number::= non_zero_digit{digit}
	2. Character:
	    constchar ::= 'letter' | 'digit'
	3. String:
	    conststring ::= "string"
	    string ::= “{character}”
	    character ::= letter | digit


Atom     | Code
identifier   0
constant     1
START        2
FINISH       3
DEF          4
NUMBER       5
STRING       6
CHAR         7
ARRAY        8
OF           9
UNDEFINED   10
READ        11
IF          12
STARTIF     13
FINISHIF    14
ASSIGN      15
WHILE       16
STARTWHILE  17
FINISHWHILE 18
PROC        19
STARTPROC   20
FINISHPROC  21
CALL        22
RETURN      23
PRINT 24
ELSE    25
FINISHELSE 26
:           27
;           28
,           29
+           30
*           31
/           32
(           33
)           34
[           35
]           36
-           37
<           38
<=         39
===       40
!=          41
>           42
>=         43
||          44
&&         45
